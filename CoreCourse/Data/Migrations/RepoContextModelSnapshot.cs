// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreCourse.Data.Migrations
{
    [DbContext(typeof(RepoContext))]
    partial class RepoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1611b6e2-de3d-459f-8828-dfaf2123f71d"),
                            Address = "Cairo",
                            Country = "Cairo",
                            Name = "Google"
                        },
                        new
                        {
                            Id = new Guid("9eb5874f-2315-4afb-9bc9-200e348f94c8"),
                            Address = "London",
                            Country = "London",
                            Name = "Facebook"
                        });
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeId");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("641c895d-683f-40af-b831-e7a4a8dea895"),
                            Age = 30,
                            CompanyId = new Guid("1611b6e2-de3d-459f-8828-dfaf2123f71d"),
                            Name = "Mohamed",
                            Position = "Junior"
                        },
                        new
                        {
                            Id = new Guid("49746903-1394-42bf-86fc-18c345cdc7e5"),
                            Age = 35,
                            CompanyId = new Guid("1611b6e2-de3d-459f-8828-dfaf2123f71d"),
                            Name = "Ahmed",
                            Position = "Senior"
                        },
                        new
                        {
                            Id = new Guid("c7bdbb9c-1b26-4deb-83a7-d411bcbe20e2"),
                            Age = 40,
                            CompanyId = new Guid("9eb5874f-2315-4afb-9bc9-200e348f94c8"),
                            Name = "Ali",
                            Position = "Team Leader"
                        });
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.HasOne("Entities.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Entities.Models.Company", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
